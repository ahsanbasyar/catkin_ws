// Generated by gencpp from file drone_controller/controller.msg
// DO NOT EDIT!


#ifndef DRONE_CONTROLLER_MESSAGE_CONTROLLER_H
#define DRONE_CONTROLLER_MESSAGE_CONTROLLER_H

#include <ros/service_traits.h>


#include <drone_controller/controllerRequest.h>
#include <drone_controller/controllerResponse.h>


namespace drone_controller
{

struct controller
{

typedef controllerRequest Request;
typedef controllerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct controller
} // namespace drone_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::drone_controller::controller > {
  static const char* value()
  {
    return "28dadd83d564c0f1c7317577c2a315b5";
  }

  static const char* value(const ::drone_controller::controller&) { return value(); }
};

template<>
struct DataType< ::drone_controller::controller > {
  static const char* value()
  {
    return "drone_controller/controller";
  }

  static const char* value(const ::drone_controller::controller&) { return value(); }
};


// service_traits::MD5Sum< ::drone_controller::controllerRequest> should match
// service_traits::MD5Sum< ::drone_controller::controller >
template<>
struct MD5Sum< ::drone_controller::controllerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::drone_controller::controller >::value();
  }
  static const char* value(const ::drone_controller::controllerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::drone_controller::controllerRequest> should match
// service_traits::DataType< ::drone_controller::controller >
template<>
struct DataType< ::drone_controller::controllerRequest>
{
  static const char* value()
  {
    return DataType< ::drone_controller::controller >::value();
  }
  static const char* value(const ::drone_controller::controllerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::drone_controller::controllerResponse> should match
// service_traits::MD5Sum< ::drone_controller::controller >
template<>
struct MD5Sum< ::drone_controller::controllerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::drone_controller::controller >::value();
  }
  static const char* value(const ::drone_controller::controllerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::drone_controller::controllerResponse> should match
// service_traits::DataType< ::drone_controller::controller >
template<>
struct DataType< ::drone_controller::controllerResponse>
{
  static const char* value()
  {
    return DataType< ::drone_controller::controller >::value();
  }
  static const char* value(const ::drone_controller::controllerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DRONE_CONTROLLER_MESSAGE_CONTROLLER_H
